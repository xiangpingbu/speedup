/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ecreditpal.maas.common.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class P2PBlacklist extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 9038956681689405135L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"P2PBlacklist\",\"namespace\":\"com.ecreditpal.maas.common.avro\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"cid\",\"type\":\"string\"},{\"name\":\"loanAmount\",\"type\":\"double\"},{\"name\":\"loanDue\",\"type\":\"double\"},{\"name\":\"loanStatus\",\"type\":{\"type\":\"enum\",\"name\":\"loanStatusType\",\"symbols\":[\"UNKNOWN\",\"DUE\",\"DUE_THEN_CLEARED\"]}},{\"name\":\"dataSource\",\"type\":{\"type\":\"enum\",\"name\":\"dataSourceType\",\"symbols\":[\"UNIONPAY\",\"P2P\"]}},{\"name\":\"mobile\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"gender\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"address\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"email\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"qq\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"job\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"orgName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"orgAddress\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"loanTerms\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"loanDate\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"lender\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"recordTimestamp\",\"type\":[\"null\",\"long\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence cid;
  @Deprecated public double loanAmount;
  @Deprecated public double loanDue;
  @Deprecated public com.ecreditpal.maas.common.avro.loanStatusType loanStatus;
  @Deprecated public com.ecreditpal.maas.common.avro.dataSourceType dataSource;
  @Deprecated public java.lang.CharSequence mobile;
  @Deprecated public java.lang.CharSequence gender;
  @Deprecated public java.lang.CharSequence address;
  @Deprecated public java.lang.CharSequence email;
  @Deprecated public java.lang.CharSequence qq;
  @Deprecated public java.lang.CharSequence job;
  @Deprecated public java.lang.CharSequence orgName;
  @Deprecated public java.lang.CharSequence orgAddress;
  @Deprecated public java.lang.Integer loanTerms;
  @Deprecated public java.lang.Long loanDate;
  @Deprecated public java.lang.CharSequence lender;
  @Deprecated public java.lang.Long recordTimestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public P2PBlacklist() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param cid The new value for cid
   * @param loanAmount The new value for loanAmount
   * @param loanDue The new value for loanDue
   * @param loanStatus The new value for loanStatus
   * @param dataSource The new value for dataSource
   * @param mobile The new value for mobile
   * @param gender The new value for gender
   * @param address The new value for address
   * @param email The new value for email
   * @param qq The new value for qq
   * @param job The new value for job
   * @param orgName The new value for orgName
   * @param orgAddress The new value for orgAddress
   * @param loanTerms The new value for loanTerms
   * @param loanDate The new value for loanDate
   * @param lender The new value for lender
   * @param recordTimestamp The new value for recordTimestamp
   */
  public P2PBlacklist(java.lang.CharSequence name, java.lang.CharSequence cid, java.lang.Double loanAmount, java.lang.Double loanDue, com.ecreditpal.maas.common.avro.loanStatusType loanStatus, com.ecreditpal.maas.common.avro.dataSourceType dataSource, java.lang.CharSequence mobile, java.lang.CharSequence gender, java.lang.CharSequence address, java.lang.CharSequence email, java.lang.CharSequence qq, java.lang.CharSequence job, java.lang.CharSequence orgName, java.lang.CharSequence orgAddress, java.lang.Integer loanTerms, java.lang.Long loanDate, java.lang.CharSequence lender, java.lang.Long recordTimestamp) {
    this.name = name;
    this.cid = cid;
    this.loanAmount = loanAmount;
    this.loanDue = loanDue;
    this.loanStatus = loanStatus;
    this.dataSource = dataSource;
    this.mobile = mobile;
    this.gender = gender;
    this.address = address;
    this.email = email;
    this.qq = qq;
    this.job = job;
    this.orgName = orgName;
    this.orgAddress = orgAddress;
    this.loanTerms = loanTerms;
    this.loanDate = loanDate;
    this.lender = lender;
    this.recordTimestamp = recordTimestamp;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return cid;
    case 2: return loanAmount;
    case 3: return loanDue;
    case 4: return loanStatus;
    case 5: return dataSource;
    case 6: return mobile;
    case 7: return gender;
    case 8: return address;
    case 9: return email;
    case 10: return qq;
    case 11: return job;
    case 12: return orgName;
    case 13: return orgAddress;
    case 14: return loanTerms;
    case 15: return loanDate;
    case 16: return lender;
    case 17: return recordTimestamp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: cid = (java.lang.CharSequence)value$; break;
    case 2: loanAmount = (java.lang.Double)value$; break;
    case 3: loanDue = (java.lang.Double)value$; break;
    case 4: loanStatus = (com.ecreditpal.maas.common.avro.loanStatusType)value$; break;
    case 5: dataSource = (com.ecreditpal.maas.common.avro.dataSourceType)value$; break;
    case 6: mobile = (java.lang.CharSequence)value$; break;
    case 7: gender = (java.lang.CharSequence)value$; break;
    case 8: address = (java.lang.CharSequence)value$; break;
    case 9: email = (java.lang.CharSequence)value$; break;
    case 10: qq = (java.lang.CharSequence)value$; break;
    case 11: job = (java.lang.CharSequence)value$; break;
    case 12: orgName = (java.lang.CharSequence)value$; break;
    case 13: orgAddress = (java.lang.CharSequence)value$; break;
    case 14: loanTerms = (java.lang.Integer)value$; break;
    case 15: loanDate = (java.lang.Long)value$; break;
    case 16: lender = (java.lang.CharSequence)value$; break;
    case 17: recordTimestamp = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'cid' field.
   * @return The value of the 'cid' field.
   */
  public java.lang.CharSequence getCid() {
    return cid;
  }

  /**
   * Sets the value of the 'cid' field.
   * @param value the value to set.
   */
  public void setCid(java.lang.CharSequence value) {
    this.cid = value;
  }

  /**
   * Gets the value of the 'loanAmount' field.
   * @return The value of the 'loanAmount' field.
   */
  public java.lang.Double getLoanAmount() {
    return loanAmount;
  }

  /**
   * Sets the value of the 'loanAmount' field.
   * @param value the value to set.
   */
  public void setLoanAmount(java.lang.Double value) {
    this.loanAmount = value;
  }

  /**
   * Gets the value of the 'loanDue' field.
   * @return The value of the 'loanDue' field.
   */
  public java.lang.Double getLoanDue() {
    return loanDue;
  }

  /**
   * Sets the value of the 'loanDue' field.
   * @param value the value to set.
   */
  public void setLoanDue(java.lang.Double value) {
    this.loanDue = value;
  }

  /**
   * Gets the value of the 'loanStatus' field.
   * @return The value of the 'loanStatus' field.
   */
  public com.ecreditpal.maas.common.avro.loanStatusType getLoanStatus() {
    return loanStatus;
  }

  /**
   * Sets the value of the 'loanStatus' field.
   * @param value the value to set.
   */
  public void setLoanStatus(com.ecreditpal.maas.common.avro.loanStatusType value) {
    this.loanStatus = value;
  }

  /**
   * Gets the value of the 'dataSource' field.
   * @return The value of the 'dataSource' field.
   */
  public com.ecreditpal.maas.common.avro.dataSourceType getDataSource() {
    return dataSource;
  }

  /**
   * Sets the value of the 'dataSource' field.
   * @param value the value to set.
   */
  public void setDataSource(com.ecreditpal.maas.common.avro.dataSourceType value) {
    this.dataSource = value;
  }

  /**
   * Gets the value of the 'mobile' field.
   * @return The value of the 'mobile' field.
   */
  public java.lang.CharSequence getMobile() {
    return mobile;
  }

  /**
   * Sets the value of the 'mobile' field.
   * @param value the value to set.
   */
  public void setMobile(java.lang.CharSequence value) {
    this.mobile = value;
  }

  /**
   * Gets the value of the 'gender' field.
   * @return The value of the 'gender' field.
   */
  public java.lang.CharSequence getGender() {
    return gender;
  }

  /**
   * Sets the value of the 'gender' field.
   * @param value the value to set.
   */
  public void setGender(java.lang.CharSequence value) {
    this.gender = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public java.lang.CharSequence getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(java.lang.CharSequence value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'qq' field.
   * @return The value of the 'qq' field.
   */
  public java.lang.CharSequence getQq() {
    return qq;
  }

  /**
   * Sets the value of the 'qq' field.
   * @param value the value to set.
   */
  public void setQq(java.lang.CharSequence value) {
    this.qq = value;
  }

  /**
   * Gets the value of the 'job' field.
   * @return The value of the 'job' field.
   */
  public java.lang.CharSequence getJob() {
    return job;
  }

  /**
   * Sets the value of the 'job' field.
   * @param value the value to set.
   */
  public void setJob(java.lang.CharSequence value) {
    this.job = value;
  }

  /**
   * Gets the value of the 'orgName' field.
   * @return The value of the 'orgName' field.
   */
  public java.lang.CharSequence getOrgName() {
    return orgName;
  }

  /**
   * Sets the value of the 'orgName' field.
   * @param value the value to set.
   */
  public void setOrgName(java.lang.CharSequence value) {
    this.orgName = value;
  }

  /**
   * Gets the value of the 'orgAddress' field.
   * @return The value of the 'orgAddress' field.
   */
  public java.lang.CharSequence getOrgAddress() {
    return orgAddress;
  }

  /**
   * Sets the value of the 'orgAddress' field.
   * @param value the value to set.
   */
  public void setOrgAddress(java.lang.CharSequence value) {
    this.orgAddress = value;
  }

  /**
   * Gets the value of the 'loanTerms' field.
   * @return The value of the 'loanTerms' field.
   */
  public java.lang.Integer getLoanTerms() {
    return loanTerms;
  }

  /**
   * Sets the value of the 'loanTerms' field.
   * @param value the value to set.
   */
  public void setLoanTerms(java.lang.Integer value) {
    this.loanTerms = value;
  }

  /**
   * Gets the value of the 'loanDate' field.
   * @return The value of the 'loanDate' field.
   */
  public java.lang.Long getLoanDate() {
    return loanDate;
  }

  /**
   * Sets the value of the 'loanDate' field.
   * @param value the value to set.
   */
  public void setLoanDate(java.lang.Long value) {
    this.loanDate = value;
  }

  /**
   * Gets the value of the 'lender' field.
   * @return The value of the 'lender' field.
   */
  public java.lang.CharSequence getLender() {
    return lender;
  }

  /**
   * Sets the value of the 'lender' field.
   * @param value the value to set.
   */
  public void setLender(java.lang.CharSequence value) {
    this.lender = value;
  }

  /**
   * Gets the value of the 'recordTimestamp' field.
   * @return The value of the 'recordTimestamp' field.
   */
  public java.lang.Long getRecordTimestamp() {
    return recordTimestamp;
  }

  /**
   * Sets the value of the 'recordTimestamp' field.
   * @param value the value to set.
   */
  public void setRecordTimestamp(java.lang.Long value) {
    this.recordTimestamp = value;
  }

  /**
   * Creates a new P2PBlacklist RecordBuilder.
   * @return A new P2PBlacklist RecordBuilder
   */
  public static com.ecreditpal.maas.common.avro.P2PBlacklist.Builder newBuilder() {
    return new com.ecreditpal.maas.common.avro.P2PBlacklist.Builder();
  }

  /**
   * Creates a new P2PBlacklist RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new P2PBlacklist RecordBuilder
   */
  public static com.ecreditpal.maas.common.avro.P2PBlacklist.Builder newBuilder(com.ecreditpal.maas.common.avro.P2PBlacklist.Builder other) {
    return new com.ecreditpal.maas.common.avro.P2PBlacklist.Builder(other);
  }

  /**
   * Creates a new P2PBlacklist RecordBuilder by copying an existing P2PBlacklist instance.
   * @param other The existing instance to copy.
   * @return A new P2PBlacklist RecordBuilder
   */
  public static com.ecreditpal.maas.common.avro.P2PBlacklist.Builder newBuilder(com.ecreditpal.maas.common.avro.P2PBlacklist other) {
    return new com.ecreditpal.maas.common.avro.P2PBlacklist.Builder(other);
  }

  /**
   * RecordBuilder for P2PBlacklist instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<P2PBlacklist>
    implements org.apache.avro.data.RecordBuilder<P2PBlacklist> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence cid;
    private double loanAmount;
    private double loanDue;
    private com.ecreditpal.maas.common.avro.loanStatusType loanStatus;
    private com.ecreditpal.maas.common.avro.dataSourceType dataSource;
    private java.lang.CharSequence mobile;
    private java.lang.CharSequence gender;
    private java.lang.CharSequence address;
    private java.lang.CharSequence email;
    private java.lang.CharSequence qq;
    private java.lang.CharSequence job;
    private java.lang.CharSequence orgName;
    private java.lang.CharSequence orgAddress;
    private java.lang.Integer loanTerms;
    private java.lang.Long loanDate;
    private java.lang.CharSequence lender;
    private java.lang.Long recordTimestamp;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ecreditpal.maas.common.avro.P2PBlacklist.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.cid)) {
        this.cid = data().deepCopy(fields()[1].schema(), other.cid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.loanAmount)) {
        this.loanAmount = data().deepCopy(fields()[2].schema(), other.loanAmount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.loanDue)) {
        this.loanDue = data().deepCopy(fields()[3].schema(), other.loanDue);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.loanStatus)) {
        this.loanStatus = data().deepCopy(fields()[4].schema(), other.loanStatus);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.dataSource)) {
        this.dataSource = data().deepCopy(fields()[5].schema(), other.dataSource);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.mobile)) {
        this.mobile = data().deepCopy(fields()[6].schema(), other.mobile);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.gender)) {
        this.gender = data().deepCopy(fields()[7].schema(), other.gender);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.address)) {
        this.address = data().deepCopy(fields()[8].schema(), other.address);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.email)) {
        this.email = data().deepCopy(fields()[9].schema(), other.email);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.qq)) {
        this.qq = data().deepCopy(fields()[10].schema(), other.qq);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.job)) {
        this.job = data().deepCopy(fields()[11].schema(), other.job);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.orgName)) {
        this.orgName = data().deepCopy(fields()[12].schema(), other.orgName);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.orgAddress)) {
        this.orgAddress = data().deepCopy(fields()[13].schema(), other.orgAddress);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.loanTerms)) {
        this.loanTerms = data().deepCopy(fields()[14].schema(), other.loanTerms);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.loanDate)) {
        this.loanDate = data().deepCopy(fields()[15].schema(), other.loanDate);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.lender)) {
        this.lender = data().deepCopy(fields()[16].schema(), other.lender);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.recordTimestamp)) {
        this.recordTimestamp = data().deepCopy(fields()[17].schema(), other.recordTimestamp);
        fieldSetFlags()[17] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing P2PBlacklist instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ecreditpal.maas.common.avro.P2PBlacklist other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.cid)) {
        this.cid = data().deepCopy(fields()[1].schema(), other.cid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.loanAmount)) {
        this.loanAmount = data().deepCopy(fields()[2].schema(), other.loanAmount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.loanDue)) {
        this.loanDue = data().deepCopy(fields()[3].schema(), other.loanDue);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.loanStatus)) {
        this.loanStatus = data().deepCopy(fields()[4].schema(), other.loanStatus);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.dataSource)) {
        this.dataSource = data().deepCopy(fields()[5].schema(), other.dataSource);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.mobile)) {
        this.mobile = data().deepCopy(fields()[6].schema(), other.mobile);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.gender)) {
        this.gender = data().deepCopy(fields()[7].schema(), other.gender);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.address)) {
        this.address = data().deepCopy(fields()[8].schema(), other.address);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.email)) {
        this.email = data().deepCopy(fields()[9].schema(), other.email);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.qq)) {
        this.qq = data().deepCopy(fields()[10].schema(), other.qq);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.job)) {
        this.job = data().deepCopy(fields()[11].schema(), other.job);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.orgName)) {
        this.orgName = data().deepCopy(fields()[12].schema(), other.orgName);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.orgAddress)) {
        this.orgAddress = data().deepCopy(fields()[13].schema(), other.orgAddress);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.loanTerms)) {
        this.loanTerms = data().deepCopy(fields()[14].schema(), other.loanTerms);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.loanDate)) {
        this.loanDate = data().deepCopy(fields()[15].schema(), other.loanDate);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.lender)) {
        this.lender = data().deepCopy(fields()[16].schema(), other.lender);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.recordTimestamp)) {
        this.recordTimestamp = data().deepCopy(fields()[17].schema(), other.recordTimestamp);
        fieldSetFlags()[17] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'cid' field.
      * @return The value.
      */
    public java.lang.CharSequence getCid() {
      return cid;
    }

    /**
      * Sets the value of the 'cid' field.
      * @param value The value of 'cid'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setCid(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.cid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'cid' field has been set.
      * @return True if the 'cid' field has been set, false otherwise.
      */
    public boolean hasCid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'cid' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearCid() {
      cid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'loanAmount' field.
      * @return The value.
      */
    public java.lang.Double getLoanAmount() {
      return loanAmount;
    }

    /**
      * Sets the value of the 'loanAmount' field.
      * @param value The value of 'loanAmount'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setLoanAmount(double value) {
      validate(fields()[2], value);
      this.loanAmount = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'loanAmount' field has been set.
      * @return True if the 'loanAmount' field has been set, false otherwise.
      */
    public boolean hasLoanAmount() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'loanAmount' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearLoanAmount() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'loanDue' field.
      * @return The value.
      */
    public java.lang.Double getLoanDue() {
      return loanDue;
    }

    /**
      * Sets the value of the 'loanDue' field.
      * @param value The value of 'loanDue'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setLoanDue(double value) {
      validate(fields()[3], value);
      this.loanDue = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'loanDue' field has been set.
      * @return True if the 'loanDue' field has been set, false otherwise.
      */
    public boolean hasLoanDue() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'loanDue' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearLoanDue() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'loanStatus' field.
      * @return The value.
      */
    public com.ecreditpal.maas.common.avro.loanStatusType getLoanStatus() {
      return loanStatus;
    }

    /**
      * Sets the value of the 'loanStatus' field.
      * @param value The value of 'loanStatus'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setLoanStatus(com.ecreditpal.maas.common.avro.loanStatusType value) {
      validate(fields()[4], value);
      this.loanStatus = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'loanStatus' field has been set.
      * @return True if the 'loanStatus' field has been set, false otherwise.
      */
    public boolean hasLoanStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'loanStatus' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearLoanStatus() {
      loanStatus = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataSource' field.
      * @return The value.
      */
    public com.ecreditpal.maas.common.avro.dataSourceType getDataSource() {
      return dataSource;
    }

    /**
      * Sets the value of the 'dataSource' field.
      * @param value The value of 'dataSource'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setDataSource(com.ecreditpal.maas.common.avro.dataSourceType value) {
      validate(fields()[5], value);
      this.dataSource = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'dataSource' field has been set.
      * @return True if the 'dataSource' field has been set, false otherwise.
      */
    public boolean hasDataSource() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'dataSource' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearDataSource() {
      dataSource = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'mobile' field.
      * @return The value.
      */
    public java.lang.CharSequence getMobile() {
      return mobile;
    }

    /**
      * Sets the value of the 'mobile' field.
      * @param value The value of 'mobile'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setMobile(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.mobile = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'mobile' field has been set.
      * @return True if the 'mobile' field has been set, false otherwise.
      */
    public boolean hasMobile() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'mobile' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearMobile() {
      mobile = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'gender' field.
      * @return The value.
      */
    public java.lang.CharSequence getGender() {
      return gender;
    }

    /**
      * Sets the value of the 'gender' field.
      * @param value The value of 'gender'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setGender(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.gender = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'gender' field has been set.
      * @return True if the 'gender' field has been set, false otherwise.
      */
    public boolean hasGender() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'gender' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearGender() {
      gender = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public java.lang.CharSequence getAddress() {
      return address;
    }

    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setAddress(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.address = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearAddress() {
      address = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }

    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.email = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearEmail() {
      email = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'qq' field.
      * @return The value.
      */
    public java.lang.CharSequence getQq() {
      return qq;
    }

    /**
      * Sets the value of the 'qq' field.
      * @param value The value of 'qq'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setQq(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.qq = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'qq' field has been set.
      * @return True if the 'qq' field has been set, false otherwise.
      */
    public boolean hasQq() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'qq' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearQq() {
      qq = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'job' field.
      * @return The value.
      */
    public java.lang.CharSequence getJob() {
      return job;
    }

    /**
      * Sets the value of the 'job' field.
      * @param value The value of 'job'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setJob(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.job = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'job' field has been set.
      * @return True if the 'job' field has been set, false otherwise.
      */
    public boolean hasJob() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'job' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearJob() {
      job = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgName' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrgName() {
      return orgName;
    }

    /**
      * Sets the value of the 'orgName' field.
      * @param value The value of 'orgName'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setOrgName(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.orgName = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'orgName' field has been set.
      * @return True if the 'orgName' field has been set, false otherwise.
      */
    public boolean hasOrgName() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'orgName' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearOrgName() {
      orgName = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'orgAddress' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrgAddress() {
      return orgAddress;
    }

    /**
      * Sets the value of the 'orgAddress' field.
      * @param value The value of 'orgAddress'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setOrgAddress(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.orgAddress = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'orgAddress' field has been set.
      * @return True if the 'orgAddress' field has been set, false otherwise.
      */
    public boolean hasOrgAddress() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'orgAddress' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearOrgAddress() {
      orgAddress = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'loanTerms' field.
      * @return The value.
      */
    public java.lang.Integer getLoanTerms() {
      return loanTerms;
    }

    /**
      * Sets the value of the 'loanTerms' field.
      * @param value The value of 'loanTerms'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setLoanTerms(java.lang.Integer value) {
      validate(fields()[14], value);
      this.loanTerms = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'loanTerms' field has been set.
      * @return True if the 'loanTerms' field has been set, false otherwise.
      */
    public boolean hasLoanTerms() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'loanTerms' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearLoanTerms() {
      loanTerms = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'loanDate' field.
      * @return The value.
      */
    public java.lang.Long getLoanDate() {
      return loanDate;
    }

    /**
      * Sets the value of the 'loanDate' field.
      * @param value The value of 'loanDate'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setLoanDate(java.lang.Long value) {
      validate(fields()[15], value);
      this.loanDate = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'loanDate' field has been set.
      * @return True if the 'loanDate' field has been set, false otherwise.
      */
    public boolean hasLoanDate() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'loanDate' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearLoanDate() {
      loanDate = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'lender' field.
      * @return The value.
      */
    public java.lang.CharSequence getLender() {
      return lender;
    }

    /**
      * Sets the value of the 'lender' field.
      * @param value The value of 'lender'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setLender(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.lender = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'lender' field has been set.
      * @return True if the 'lender' field has been set, false otherwise.
      */
    public boolean hasLender() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'lender' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearLender() {
      lender = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'recordTimestamp' field.
      * @return The value.
      */
    public java.lang.Long getRecordTimestamp() {
      return recordTimestamp;
    }

    /**
      * Sets the value of the 'recordTimestamp' field.
      * @param value The value of 'recordTimestamp'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder setRecordTimestamp(java.lang.Long value) {
      validate(fields()[17], value);
      this.recordTimestamp = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'recordTimestamp' field has been set.
      * @return True if the 'recordTimestamp' field has been set, false otherwise.
      */
    public boolean hasRecordTimestamp() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'recordTimestamp' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.P2PBlacklist.Builder clearRecordTimestamp() {
      recordTimestamp = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    @Override
    public P2PBlacklist build() {
      try {
        P2PBlacklist record = new P2PBlacklist();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.cid = fieldSetFlags()[1] ? this.cid : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.loanAmount = fieldSetFlags()[2] ? this.loanAmount : (java.lang.Double) defaultValue(fields()[2]);
        record.loanDue = fieldSetFlags()[3] ? this.loanDue : (java.lang.Double) defaultValue(fields()[3]);
        record.loanStatus = fieldSetFlags()[4] ? this.loanStatus : (com.ecreditpal.maas.common.avro.loanStatusType) defaultValue(fields()[4]);
        record.dataSource = fieldSetFlags()[5] ? this.dataSource : (com.ecreditpal.maas.common.avro.dataSourceType) defaultValue(fields()[5]);
        record.mobile = fieldSetFlags()[6] ? this.mobile : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.gender = fieldSetFlags()[7] ? this.gender : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.address = fieldSetFlags()[8] ? this.address : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.email = fieldSetFlags()[9] ? this.email : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.qq = fieldSetFlags()[10] ? this.qq : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.job = fieldSetFlags()[11] ? this.job : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.orgName = fieldSetFlags()[12] ? this.orgName : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.orgAddress = fieldSetFlags()[13] ? this.orgAddress : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.loanTerms = fieldSetFlags()[14] ? this.loanTerms : (java.lang.Integer) defaultValue(fields()[14]);
        record.loanDate = fieldSetFlags()[15] ? this.loanDate : (java.lang.Long) defaultValue(fields()[15]);
        record.lender = fieldSetFlags()[16] ? this.lender : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.recordTimestamp = fieldSetFlags()[17] ? this.recordTimestamp : (java.lang.Long) defaultValue(fields()[17]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
