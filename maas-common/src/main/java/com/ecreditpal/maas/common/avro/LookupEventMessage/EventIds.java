/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ecreditpal.maas.common.avro.LookupEventMessage;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class EventIds extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1731663405453830943L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EventIds\",\"namespace\":\"com.ecreditpal.maas.common.avro.LookupEventMessage\",\"fields\":[{\"name\":\"event_id\",\"type\":\"string\",\"default\":\"-1\"},{\"name\":\"timestamp_ms\",\"type\":\"long\",\"default\":-1},{\"name\":\"ip_address\",\"type\":\"string\",\"default\":\"\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence event_id;
  @Deprecated public long timestamp_ms;
  @Deprecated public java.lang.CharSequence ip_address;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EventIds() {}

  /**
   * All-args constructor.
   * @param event_id The new value for event_id
   * @param timestamp_ms The new value for timestamp_ms
   * @param ip_address The new value for ip_address
   */
  public EventIds(java.lang.CharSequence event_id, java.lang.Long timestamp_ms, java.lang.CharSequence ip_address) {
    this.event_id = event_id;
    this.timestamp_ms = timestamp_ms;
    this.ip_address = ip_address;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return event_id;
    case 1: return timestamp_ms;
    case 2: return ip_address;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: event_id = (java.lang.CharSequence)value$; break;
    case 1: timestamp_ms = (java.lang.Long)value$; break;
    case 2: ip_address = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'event_id' field.
   * @return The value of the 'event_id' field.
   */
  public java.lang.CharSequence getEventId() {
    return event_id;
  }

  /**
   * Sets the value of the 'event_id' field.
   * @param value the value to set.
   */
  public void setEventId(java.lang.CharSequence value) {
    this.event_id = value;
  }

  /**
   * Gets the value of the 'timestamp_ms' field.
   * @return The value of the 'timestamp_ms' field.
   */
  public java.lang.Long getTimestampMs() {
    return timestamp_ms;
  }

  /**
   * Sets the value of the 'timestamp_ms' field.
   * @param value the value to set.
   */
  public void setTimestampMs(java.lang.Long value) {
    this.timestamp_ms = value;
  }

  /**
   * Gets the value of the 'ip_address' field.
   * @return The value of the 'ip_address' field.
   */
  public java.lang.CharSequence getIpAddress() {
    return ip_address;
  }

  /**
   * Sets the value of the 'ip_address' field.
   * @param value the value to set.
   */
  public void setIpAddress(java.lang.CharSequence value) {
    this.ip_address = value;
  }

  /**
   * Creates a new EventIds RecordBuilder.
   * @return A new EventIds RecordBuilder
   */
  public static com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder newBuilder() {
    return new com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder();
  }

  /**
   * Creates a new EventIds RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EventIds RecordBuilder
   */
  public static com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder newBuilder(com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder other) {
    return new com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder(other);
  }

  /**
   * Creates a new EventIds RecordBuilder by copying an existing EventIds instance.
   * @param other The existing instance to copy.
   * @return A new EventIds RecordBuilder
   */
  public static com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder newBuilder(com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds other) {
    return new com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder(other);
  }

  /**
   * RecordBuilder for EventIds instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EventIds>
    implements org.apache.avro.data.RecordBuilder<EventIds> {

    private java.lang.CharSequence event_id;
    private long timestamp_ms;
    private java.lang.CharSequence ip_address;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.event_id)) {
        this.event_id = data().deepCopy(fields()[0].schema(), other.event_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp_ms)) {
        this.timestamp_ms = data().deepCopy(fields()[1].schema(), other.timestamp_ms);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ip_address)) {
        this.ip_address = data().deepCopy(fields()[2].schema(), other.ip_address);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing EventIds instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.event_id)) {
        this.event_id = data().deepCopy(fields()[0].schema(), other.event_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp_ms)) {
        this.timestamp_ms = data().deepCopy(fields()[1].schema(), other.timestamp_ms);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ip_address)) {
        this.ip_address = data().deepCopy(fields()[2].schema(), other.ip_address);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'event_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventId() {
      return event_id;
    }

    /**
      * Sets the value of the 'event_id' field.
      * @param value The value of 'event_id'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder setEventId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.event_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'event_id' field has been set.
      * @return True if the 'event_id' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'event_id' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder clearEventId() {
      event_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp_ms' field.
      * @return The value.
      */
    public java.lang.Long getTimestampMs() {
      return timestamp_ms;
    }

    /**
      * Sets the value of the 'timestamp_ms' field.
      * @param value The value of 'timestamp_ms'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder setTimestampMs(long value) {
      validate(fields()[1], value);
      this.timestamp_ms = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp_ms' field has been set.
      * @return True if the 'timestamp_ms' field has been set, false otherwise.
      */
    public boolean hasTimestampMs() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'timestamp_ms' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder clearTimestampMs() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ip_address' field.
      * @return The value.
      */
    public java.lang.CharSequence getIpAddress() {
      return ip_address;
    }

    /**
      * Sets the value of the 'ip_address' field.
      * @param value The value of 'ip_address'.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder setIpAddress(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.ip_address = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ip_address' field has been set.
      * @return True if the 'ip_address' field has been set, false otherwise.
      */
    public boolean hasIpAddress() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ip_address' field.
      * @return This builder.
      */
    public com.ecreditpal.maas.common.avro.LookupEventMessage.EventIds.Builder clearIpAddress() {
      ip_address = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public EventIds build() {
      try {
        EventIds record = new EventIds();
        record.event_id = fieldSetFlags()[0] ? this.event_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.timestamp_ms = fieldSetFlags()[1] ? this.timestamp_ms : (java.lang.Long) defaultValue(fields()[1]);
        record.ip_address = fieldSetFlags()[2] ? this.ip_address : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
