<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoders are  by default assigned the type
             ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
        <encoder>
            <pattern>%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--<appender name="FILE" class= "ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--<fileNamePattern>/opt/log/test.%d{yyyy-MM-dd}.log</fileNamePattern>-->
    <!--&lt;!&ndash; 按天来回滚，如果需要按小时来回滚，则设置为{yyyy-MM-dd_HH} &ndash;&gt;-->
    <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy" />-->
    <!--&lt;!&ndash; 如果按天来回滚，则最大保存时间为1天，1天之前的都将被清理掉 &ndash;&gt;-->
    <!--<maxHistory>30</maxHistory>-->
    <!--&lt;!&ndash; 日志输出格式 &ndash;&gt;-->
    <!--<layout class="ch.qos.logback.classic.PatternLayout">-->
    <!--<Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} -%msg%n</Pattern>-->
    <!--</layout>-->
    <!--</appender>-->
    <!--&lt;!&ndash; 异步输出 &ndash;&gt;-->
    <!--<appender name ="ASYNC" class= "ch.qos.logback.classic.AsyncAppender">-->
    <!--&lt;!&ndash; 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 &ndash;&gt;-->
    <!--<discardingThreshold >0</discardingThreshold>-->
    <!--&lt;!&ndash; 更改默认的队列的深度,该值会影响性能.默认值为256 &ndash;&gt;-->
    <!--<queueSize>512</queueSize>-->
    <!--&lt;!&ndash; 添加附加的appender,最多只能添加一个 &ndash;&gt;-->
    <!--<appender-ref ref ="FILE"/>-->
    <!--</appender>-->
    <!--<appender name="file"-->
    <!--class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--<Encoding>UTF-8</Encoding>-->
    <!--<File>/home/test.log</File>-->
    <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--<FileNamePattern>/home/test-%d{yyyy-MM-dd}.log</FileNamePattern>-->
    <!--<MaxHistory>10</MaxHistory>-->
    <!--<TimeBasedFileNamingAndTriggeringPolicy-->
    <!--class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
    <!--<MaxFileSize>5MB</MaxFileSize>-->
    <!--</TimeBasedFileNamingAndTriggeringPolicy>-->
    <!--</rollingPolicy>-->
    <!--<layout class="ch.qos.logback.classic.PatternLayout">-->
    <!--<pattern>[%-5level] %d{HH:mm:ss.SSS} [%thread] %logger{36} - %msg%n-->
    <!--</pattern>-->
    <!--</layout>-->
    <!--</appender>-->

    <appender name="fileAppender" class="ch.qos.logback.core.FileAppender">
        <file>${log.file.path}</file>
        <encoder><!-- 必须指定，否则不会往文件输出内容 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>
        </encoder>
        <append>true</append>
        <prudent>true</prudent>
    </appender>

    <appender name="errorFileAppender" class="ch.qos.logback.core.FileAppender">
        <file>${log.file.error.path}</file>
        <encoder><!-- 必须指定，否则不会往文件输出内容 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>
        </encoder>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <append>true</append>
        <prudent>true</prudent>
    </appender>

    <appender name="rollingFileAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${log.file.rolling.path}/maas.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="kafkaAppender" class="com.ecreditpal.maas.common.log.KafkaAppender">
        <encoder class="com.ecreditpal.maas.common.log.encoder.KafkaEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>
            </layout>
        </encoder>
        <bootstrapSevers>${log.kafka.bootstrap.severs}</bootstrapSevers>
        <topic>${log.kafka.topic}</topic>
        <!--用来指示一组consumer所在的组-->
        <groupId>${log.kafka.groupId}</groupId>
        <retries>${log.kafka.retries}</retries>
        <batchSize>${log.kafka.batchSize}</batchSize>
        <lingerMs>${log.kafka.lingerMs}</lingerMs>
        <bufferMemory>${log.kafka.bufferMemory}</bufferMemory>
    </appender>

    <root>
        <level value="info"/>
        <appender-ref ref="rollingFileAppender"/>
        <appender-ref ref="fileAppender"/>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="errorFileAppender"/>
    </root>



    <logger name="model-log" additivity="false">
        <level value="info"/>
        <!--<appender-ref ref="kafkaAppender"/>-->
        <appender-ref ref="rollingFileAppender"/>
        <appender-ref ref="fileAppender"/>
        <appender-ref ref="STDOUT"/>
    </logger>
</configuration>



